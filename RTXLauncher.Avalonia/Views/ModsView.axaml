<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:vm="using:RTXLauncher.Avalonia.ViewModels"
             x:Class="RTXLauncher.Avalonia.Views.ModsView"
             x:DataType="vm:ModsViewModel">

    <Grid RowDefinitions="Auto,*" Margin="10" RowSpacing="10">

        <!-- Search and Status Area -->
        <Grid Grid.Row="0" ColumnDefinitions="*,Auto">
            <TextBox Grid.Column="0" Text="{Binding SearchText, Mode=TwoWay}" Watermark="Search for mods by title or author..."/>
            <ProgressBar Grid.Column="1" IsIndeterminate="True" IsVisible="{Binding IsBusy}" Width="100" Margin="10,0,0,0"/>
        </Grid>

        <!-- Mod Grid Area -->
        <ScrollViewer Grid.Row="1">
            <!-- Using a WrapPanel to create a responsive grid that automatically reflows -->
            <ItemsControl ItemsSource="{Binding Mods}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal" ItemWidth="200" ItemHeight="250"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>

                <!-- This is the template for a SINGLE mod card -->
                <ItemsControl.ItemTemplate>
                    <DataTemplate x:DataType="vm:ModItemViewModel">
                        <Border BorderBrush="Gray" BorderThickness="1" CornerRadius="4" Padding="10" Margin="5">
                            <Grid RowDefinitions="120,Auto,*,Auto">
                                <!-- Thumbnail Image -->
                                <!-- NOTE: For real-world use, consider the 'Avalonia.Avalonia.Images.ImageLoader' NuGet package for async loading -->
                                <Image Grid.Row="0" Source="{Binding ThumbnailUrl}" Stretch="UniformToFill"/>

                                <!-- Title -->
                                <TextBlock Grid.Row="1" Text="{Binding Title}" FontWeight="Bold" TextWrapping="Wrap" Margin="0,5,0,0"/>

                                <!-- Author -->
                                <TextBlock Grid.Row="2" Text="{Binding Author}" Foreground="Gray" FontSize="12" VerticalAlignment="Bottom"/>

                                <!-- Button Panel -->
                                <Panel Grid.Row="3" Margin="0,10,0,0">
                                    <!-- Install Button -->
                                    <Button Content="Install"
                                            Command="{Binding ManageInstallationCommand}"
                                            IsVisible="{Binding !IsInstalled}"
                                            IsEnabled="{Binding IsNotBusy}"
                                            HorizontalAlignment="Stretch"/>
                                    
                                    <!-- Uninstall Button (Visible when installed) -->
                                    <Button Content="Uninstall"
                                            Classes="destructive"                                             Command="{Binding ManageInstallationCommand}"
                                            IsVisible="{Binding IsInstalled}"
                                            IsEnabled="{Binding IsNotBusy}"
                                            HorizontalAlignment="Stretch"/>
                                    
                                    <!-- Busy Indicator (Visible during operations) -->
                                    <ProgressBar IsIndeterminate="True" IsVisible="{Binding IsBusy}" VerticalAlignment="Center"/>
                                </Panel>
                            </Grid>
                        </Border>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </ScrollViewer>
    </Grid>
</UserControl>